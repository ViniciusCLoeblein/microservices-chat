version: '3.8'

networks:
  app-network:

services:
  gateway:
    image: gateway:1.0.1
    ports:
      - 8080:8080
    command: ["bash", "./deploy.sh", "gateway"]
    networks:
      - app-network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  auth:
    image: auth:1.0.0
    command: ["bash", "./deploy.sh", "auth"]
    depends_on:
      - gateway
      - rabbitmq
    networks:
      - app-network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
  game:
    image: game:1.0.0
    command: ["bash", "./deploy.sh", "game"]
    depends_on:
      - gateway
      - rabbitmq
    networks:
      - app-network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  rabbitmq:
    image: rabbitmq:4.1-rc-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=12345
      - RABBITMQ_ERLANG_COOKIE=cluster_cookie
      - RABBITMQ_PROMETHEUS_RETENTION_PERIOD=5m
      - CLUSTERED=true
    ports:
      - 5672:5672
      - 15672:15672
      - 15692:15692
    networks:
      - app-network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:17.1-bullseye
    environment:
      POSTGRES_USER: vini
      POSTGRES_PASSWORD: vini123
      POSTGRES_DB: game
    ports:
      - 5432:5432
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:
